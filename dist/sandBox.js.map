{"version":3,"sources":["../sandBox.js"],"names":["readline","require","ROUTINE_INTERVAL","monthCode","state","messageTime","shouldDiplayMessage","typedCode","now","lightWasOn","isTopOpen","emitKeypressEvents","process","stdin","setRawMode","on","str","key","console","log","format","name","exit","setInterval","isSame","hours","minutes"],"mappings":";;AACA;;;;AACA;;;;AAEA,IAAMA,WAAWC,QAAQ,UAAR,CAAjB;;AAEA;AACA,IAAIC,mBAAmB,KAAvB;AACA,IAAIC,YAAY;AACZ,OAAG,KADS;AAEZ,OAAG,KAFS;AAGZ,QAAI,KAHQ;AAIZ,QAAI,KAJQ;AAKZ,QAAI,KALQ;AAMZ,OAAG;AANS,CAAhB;;AASA,IAAIC,QAAQ;AACRC,iBAAa,4BADL;AAERC,yBAAqB,KAFb;AAGRC,eAAW,EAHH;AAIRC,SAAK,uBAJG;AAKRC,gBAAY,KALJ;AAMRC,eAAW;AANH,CAAZ;;AASAV,SAASW,kBAAT,CAA4BC,QAAQC,KAApC;AACAD,QAAQC,KAAR,CAAcC,UAAd,CAAyB,IAAzB;;AAEAF,QAAQC,KAAR,CAAcE,EAAd,CAAiB,UAAjB,EAA6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvCC,YAAQC,GAAR,CAAY,aAAZ;AACA,QAAIf,MAAMI,GAAN,CAAUY,MAAV,CAAiB,YAAjB,MAAmC,sBAAO,YAAP,EAAqB,YAArB,EAAmCA,MAAnC,CAA0C,YAA1C,CAAvC,EAAgG;AAC5FF,gBAAQC,GAAR,CAAY,WAAZ;AACH;AACD,QAAIf,MAAME,mBAAV,EAA+B;AAC3B,yCAAqBY,QAAQC,GAA7B;AACAf,cAAME,mBAAN,GAA4B,KAA5B;AACH;AACD,QAAIW,IAAII,IAAJ,KAAa,GAAjB,EAAsB;AAClBT,gBAAQU,IAAR;AACH;AACJ,CAZD;;AAcA;;AAEAC,YACI,YAAY;AACR,QAAIf,MAAM,uBAAV;AACA,QAAI,CAACA,IAAIgB,MAAJ,CAAWpB,MAAMC,WAAjB,EAA8B,KAA9B,CAAL,EAA2C;AACvCD,gBAAQ,0BAAR;AACH;AACD,QAAIA,MAAMC,WAAN,CAAkBoB,KAAlB,OAA8BjB,IAAIiB,KAAJ,EAA9B,IAA6CrB,MAAMC,WAAN,CAAkBqB,OAAlB,OAAgClB,IAAIkB,OAAJ,EAAjF,EAAgG;AAC5FR,gBAAQC,GAAR,CAAY,uBAAZ;AACAf,cAAME,mBAAN,GAA4B,IAA5B;AACH;AACJ,CAVL,EAUOJ,gBAVP","file":"sandBox.js","sourcesContent":["\nimport moment from 'moment';\nimport {getMessageTime, initDayState, printSelectedMessage} from './utils';\n\nconst readline = require('readline');\n\n// var board = new five.Board({repl: false});\nvar ROUTINE_INTERVAL = 10000;\nvar monthCode = {\n    8: 'aaa',\n    9: 'atg',\n    10: 'tgg',\n    11: 'cat',\n    12: 'cta',\n    1: 'gta',\n};\n\nvar state = {\n    messageTime: getMessageTime(),\n    shouldDiplayMessage: false,\n    typedCode: '',\n    now: moment(),\n    lightWasOn: false,\n    isTopOpen: false,\n};\n\nreadline.emitKeypressEvents(process.stdin);\nprocess.stdin.setRawMode(true);\n\nprocess.stdin.on('keypress', (str, key) => {\n    console.log('mailPressed');\n    if (state.now.format('DD-MM-YYYY') === moment('10-11-2017', 'DD-MM-YYYY').format('DD-MM-YYYY')) {\n        console.log('sunAction');\n    }\n    if (state.shouldDiplayMessage) {\n        printSelectedMessage(console.log);\n        state.shouldDiplayMessage = false;\n    }\n    if (key.name === 'q') {\n        process.exit();\n    }\n});\n\n////////////////// Routine ////////////////\n\nsetInterval(\n    function () {\n        let now = moment();\n        if (!now.isSame(state.messageTime, 'day')) {\n            state = initDayState();\n        }\n        if (state.messageTime.hours() === now.hours() && state.messageTime.minutes() === now.minutes()) {\n            console.log('**** messageTime ****');\n            state.shouldDiplayMessage = true;\n        }\n    }, ROUTINE_INTERVAL);\n\n"]}